---
AWSTemplateFormatVersion: 2010-09-09
Metadata:
  Ansible-Test-Environment-Template-Version:
    DATEOFLASTEDIT: 2018-11-27
    TEMPLATEFILENAME: ansible-test-environment.yml
  Modified last by:
    NAME: William Tooles wtooles@gmail.com
Parameters:
  OperatingSystem:
    Description: The operating system desired for the EC2 instance
    Type: String
    Default: amilinux2
    AllowedValues:
      - amilinux2
      - amilinux
      - rhel7
      - rhel6
      - ubuntu1804
      - ubuntu1604
      - ubuntu1404
  NameOfService:
    Description: The tag name associated with this EC2 instances.
    Type: String
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access into the server
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  RegionMap:
    us-east-1:
      amilinux2: ami-009d6802948d06e52
      amilinux: ami-09479453c5cde9639
      rhel7: ami-011b3ccf1bd6db744
      rhel6: ami-1b05b10d
      ubuntu1804: ami-0d2505740b82f7948
      ubuntu1604: ami-0f9cf087c1f27d9b1
      ubuntu1404: ami-05a36d3b9aa4a17ac
    us-east-2:
      amilinux2: ami-02e680c4540db351e
      amilinux: ami-023c8dbf8268fb3ca
      rhel7: ami-0b500ef59d8335eee
      rhel6: ami-fa280c9f
      ubuntu1804: ami-0cf8cc36b8c81c6de
      ubuntu1604: ami-0653e888ec96eab9b
      ubuntu1404: ami-0970ab4b97fe3a913
    us-west-1:
      amilinux2: ami-011b6930a81cd6aaf
      amilinux: ami-06ff511fea5db2c99
      rhel7: ami-0ec1ad91f200c15a8
      rhel6: ami-55a4fc35
      ubuntu1804: ami-09c5eca75eed8245a
      ubuntu1604: ami-08945b3352c7bf9c0
      ubuntu1404: ami-056411f6be4840844
    us-west-2:
      amilinux2: ami-01bbe152bf19d0289
      amilinux: ami-0bb5806b2e825a199
      rhel7: ami-036affea69a1101c9
      rhel6: ami-d61a92b6
      ubuntu1804: ami-0f05ad41860678734
      ubuntu1604: ami-076e276d85f524150
      ubuntu1404: ami-0ea790e761025f9ce
Resources:
  LnEc2InstanceWebServer1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - !Ref OperatingSystem
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'webserver' ,'1'] ]
      SecurityGroups:
        - !Ref LnSecurityGroup
      KeyName: !Ref KeyName
  LnEc2InstanceWebServer2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - !Ref OperatingSystem
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'webserver' ,'2'] ]
      SecurityGroups:
        - !Ref LnSecurityGroup
      KeyName: !Ref KeyName
  LnEc2InstanceLoadBalancer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - !Ref OperatingSystem
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'load-balancer'] ]
      SecurityGroups:
        - !Ref LnSecurityGroup
      KeyName: !Ref KeyName
  LnEc2ControlMachine:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - !Ref OperatingSystem
      Tags:
        - Key: Name
          Value: !Join [ '-', [ !Ref NameOfService, 'control-machine'] ]
      SecurityGroups:
        - !Ref LnSecurityGroup
      KeyName: !Ref KeyName
  LnSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH to client host. Created using CloudFormation template.
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: acg-ansible-course-sg
        - Key: Description
          Value: Security Group created for SSH and HTTP access to instances.
  LnElasticIp1:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2InstanceWebServer1
  LnElasticIp2:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2InstanceWebServer2
  LnElasticIp3:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2InstanceLoadBalancer
  LnElasticIp4:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref LnEc2ControlMachine
Outputs:
  LnPublicIpAddressInstance1:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2InstanceWebServer1
      - PublicIp
  LnPublicIpAddressInstance2:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2InstanceWebServer2
      - PublicIp
  LnPublicIpAddressLoadBalancer:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2InstanceLoadBalancer
      - PublicIp
  LnPublicIpAddressControlMachine:
    Description: The Public IP address for EC2 instances
    Value: !GetAtt
      - LnEc2ControlMachine
      - PublicIp
  WebsiteLink:
    Description: The Public DNS for the EC2 Instance
    Value: !Sub 'http://${LnEc2InstanceLoadBalancer.PublicDnsName}'
...
